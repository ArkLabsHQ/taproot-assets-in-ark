package taponark

import (
	"bytes"
	"context"
	"encoding/hex"
	"log"

	"github.com/btcsuite/btcd/btcutil/psbt"
	"github.com/btcsuite/btcd/txscript"
	"github.com/btcsuite/btcd/wire"
	"github.com/decred/dcrd/dcrec/secp256k1/v4"
	"github.com/lightninglabs/taproot-assets/asset"
	"github.com/lightninglabs/taproot-assets/tappsbt"
	"github.com/lightninglabs/taproot-assets/taprpc"
	"github.com/lightninglabs/taproot-assets/taprpc/assetwalletrpc"
	"github.com/lightninglabs/taproot-assets/tapsend"
)

// user tap client

const (
	userDataDir            = "data"
	userTapTLSCertFilename = "2d2d2d2d2d424547494e2043455254494649434154452d2d2d2d2d0a4d494943506a4343416553674177494241674952414f6746565263634d45774275383575616a4d4d68455177436759494b6f5a497a6a3045417749774e6a45670a4d4234474131554543684d58644746775a434268645852765a3256755a584a686447566b49474e6c636e5178456a415142674e5642414d544357467361574e6c0a4c58526863444165467730794e5441794d4463784e6a45324d6a6c61467730794e6a41304d4451784e6a45324d6a6c614d4459784944416542674e5642416f540a4633526863475167595856306232646c626d56795958526c5a43426a5a584a304d524977454159445651514445776c6862476c6a5a53313059584177575441540a42676371686b6a4f5051494242676771686b6a4f50514d4242774e43414154354776586d6d596358414e544c54344c5a485a57534e7378676f593547422b782b0a68345855536f39746241776e46434248724e354b6d5571464c356a7a702f5952454f4b75436938446b43584e6b46696c5a534c6f6f3448534d4948504d4134470a41315564447745422f775145417749437044415442674e56485355454444414b4267677242674546425163444154415042674e5648524d4241663845425441440a4151482f4d42304741315564446751574242517537516241496663614265394b466a37392f6a3547515966505744423442674e56485245456354427667676c680a62476c6a5a5331305958434343577876593246736147397a6449494a59577870593255746447467767684e7762327868636931754d54417459577870593255740a6447467767675231626d6c3467677031626d6c346347466a613256306767646964575a6a623235756877522f41414142687841414141414141414141414141410a414141414141414268775373456741444d416f4743437147534d343942414d43413067414d4555434946577076504c70706e677367344563546555326764614f0a6a6d536c6f563963777951497869575854514d7141694541332b367a78416d7938394669716677714c464e4537437a637769486142583437414c7778564257330a3959673d0a2d2d2d2d2d454e442043455254494649434154452d2d2d2d2d0a"
	userTapMacaroon        = "0201047461706402d001030a1032b3c6b3c9e14ffb94168f8fcc283dfe1201301a180a09616464726573736573120472656164120577726974651a150a06617373657473120472656164120577726974651a170a086368616e6e656c73120472656164120577726974651a150a066461656d6f6e120472656164120577726974651a130a046d696e74120472656164120577726974651a150a0670726f6f6673120472656164120577726974651a120a03726671120472656164120577726974651a170a08756e6976657273651204726561641205777269746500000620cdd4a769ae871fb7d75dc0684365c72b189d639b9b2620df625fc219c4a2dd24"
	userRPCPort            = "12029"
	userRPCHostPort        = "localhost:" + userRPCPort

	serverDataDir            = "data"
	serverTapTLSCertFilename = "2d2d2d2d2d424547494e2043455254494649434154452d2d2d2d2d0a4d4949434e544343416471674177494241674952414c63694458752b58413257774861775665354e454d6377436759494b6f5a497a6a3045417749774e4445670a4d4234474131554543684d58644746775a434268645852765a3256755a584a686447566b49474e6c636e51784544414f42674e5642414d5442324a76596931300a595841774868634e4d6a55774d6a41334d5459784e6a49355768634e4d6a59774e4441304d5459784e6a4935576a41304d534177486759445651514b457864300a5958426b494746316447396e5a57356c636d46305a57516759325679644445514d4134474131554541784d48596d39694c5852686344425a4d424d47427971470a534d34394167454743437147534d34394177454841304941424d4e6e577854306a576239567569592f47745951744c3170702b79327434734f563470547374410a6a53316c44394f515a454c565664482b675a42564d4f2b706154577149587a7a56304374693464334c454f77586a2b6a6763777767636b7744675944565230500a4151482f4241514441674b6b4d424d47413155644a51514d4d416f47434373474151554642774d424d41384741315564457745422f7751464d414d42416638770a485159445652304f424259454650707765574875666e304636742f762f4e576639693277677a4a4e4d48494741315564455152724d476d4342324a76596931300a5958434343577876593246736147397a64494948596d39694c585268634949526347397359584974626a45774c574a76596931305958434342485675615869430a436e56756158687759574e725a58534342324a315a6d4e76626d36484248384141414748454141414141414141414141414141414141414141414748424b77530a41414977436759494b6f5a497a6a3045417749445351417752674968414e5055314e47747858564f784e4c696358333542532f3344356559577a754d2b2f43760a32506a6d336f476d41694541346c6b5339306743576a3444553876414e687652635642555163437971677567584e354e73582b695361673d0a2d2d2d2d2d454e442043455254494649434154452d2d2d2d2d0a"
	serverTapMacaroon        = "0201047461706402d001030a10cc26f487cc59326f82a7d7b42c991c661201301a180a09616464726573736573120472656164120577726974651a150a06617373657473120472656164120577726974651a170a086368616e6e656c73120472656164120577726974651a150a066461656d6f6e120472656164120577726974651a130a046d696e74120472656164120577726974651a150a0670726f6f6673120472656164120577726974651a120a03726671120472656164120577726974651a170a08756e69766572736512047265616412057772697465000006201b74fecdad1d43dbab27a1dbc46b2e21b535d03ecef5fdf9131729f867f9b72f"
	serverRPCPort            = "12030"
	serverRPCHostPort        = "localhost:" + serverRPCPort

	groupKeyName         = "group_key"
	amtName              = "amt"
	assetVersionName     = "asset_version"
	addressVersionName   = "address_version"
	proofCourierAddrName = "proof_courier_addr"
)

const (
	userLndTLSCert     = "2d2d2d2d2d424547494e2043455254494649434154452d2d2d2d2d0a4d494943507a4343416557674177494241674952414f667a6f744a714e627644357967316334484535574177436759494b6f5a497a6a3045417749774d5445660a4d4230474131554543684d576247356b494746316447396e5a57356c636d46305a575167593256796444454f4d4177474131554541784d4659577870593255770a4868634e4d6a55774d6a41334d5459784e6a49355768634e4d6a59774e4441304d5459784e6a4935576a41784d523877485159445651514b45785a73626d51670a595856306232646c626d56795958526c5a43426a5a584a304d51347744415944565151444577566862476c6a5a54425a4d424d4742797147534d3439416745470a43437147534d343941774548413049414250676b694b3659777a7a38697a31724a665448712b4d654374545a31486d705a4f4d71344d4c53353962634e7251360a38637a62672b4f56393169486e51617671696b7a625471366c4f7543663767463735415a7351366a6764307767646f7744675944565230504151482f424151440a41674b6b4d424d47413155644a51514d4d416f47434373474151554642774d424d41384741315564457745422f7751464d414d4241663877485159445652304f0a42425945464367576b587571303073526963323649762b4f307a6d76494c6e704d49474342674e5648524545657a42356767566862476c6a5a59494a6247396a0a5957786f62334e306767566862476c6a5a5949506347397359584974626a45774c57467361574e6c6768526f62334e304c6d52765932746c63693570626e526c0a636d356862494945645735706549494b64573570654842685932746c64494948596e566d59323975626f634566774141415963514141414141414141414141410a414141414141414141596345724249414244414b42676771686b6a4f5051514441674e4941444246416941707265752b6250314b644e645838503379316a2b310a3665362b4e382b50397652346e39414c6f63725072774968414c504466355538796b486977304e763244337550596230454c5236696c666c71584753557939440a653242780a2d2d2d2d2d454e442043455254494649434154452d2d2d2d2d0a"
	userLndMacaroon    = "0201036c6e6402f801030a102998dd03fe5cd61e528d9b20af7b40f81201301a160a0761646472657373120472656164120577726974651a130a04696e666f120472656164120577726974651a170a08696e766f69636573120472656164120577726974651a210a086d616361726f6f6e120867656e6572617465120472656164120577726974651a160a076d657373616765120472656164120577726974651a170a086f6666636861696e120472656164120577726974651a160a076f6e636861696e120472656164120577726974651a140a057065657273120472656164120577726974651a180a067369676e6572120867656e657261746512047265616400000620d331714aeeb025a30e83ddda3cdcf5a46b1453352db8628c288c2c25cfa41e8a"
	userLndRpcPort     = "10001"
	userLndRpcHostPort = "localhost:" + userLndRpcPort

	serverLndTLSCert     = "2d2d2d2d2d424547494e2043455254494649434154452d2d2d2d2d0a4d4949434e44434341646d674177494241674951583735585362725343354e4a36474c61313376356d7a414b42676771686b6a4f50515144416a41764d5238770a485159445651514b45785a73626d5167595856306232646c626d56795958526c5a43426a5a584a304d517777436759445651514445774e69623249774868634e0a4d6a55774d6a41334d5459784e6a49355768634e4d6a59774e4441304d5459784e6a4935576a41764d523877485159445651514b45785a73626d5167595856300a6232646c626d56795958526c5a43426a5a584a304d517777436759445651514445774e69623249775754415442676371686b6a4f5051494242676771686b6a4f0a50514d4242774e4341415369747357315a356e69655777622b3549504246524172366e7a32574459716a6e6a306a4f66555275617a486651504c745a777444590a2b30776e386b516447754142576955634d42717533706365774542366a5032726f3448574d4948544d41344741315564447745422f77514541774943704441540a42674e56485355454444414b4267677242674546425163444154415042674e5648524d4241663845425441444151482f4d4230474131556444675157424252360a6941666c34423330496e31792f74746738504d64716770614c6a423842674e56485245456454427a67674e6962324b4343577876593246736147397a644949440a596d39696767317762327868636931754d544174596d39696768526f62334e304c6d52765932746c63693570626e526c636d356862494945645735706549494b0a64573570654842685932746c64494948596e566d59323975626f63456677414141596351414141414141414141414141414141414141414141596345724249410a4254414b42676771686b6a4f5051514441674e4a4144424741694541716f4f5353506b496e2b446b626d716c5a4d762b4369333170527363715a4c326d544c7a0a456b412b386163434951434d5a776d58366d7035364f75477955357a2b3048676d6472326c664f5153546962456d6b323945316761673d3d0a2d2d2d2d2d454e442043455254494649434154452d2d2d2d2d0a"
	serverLndMacaroon    = "0201036c6e6402f801030a10ec2f643de1555069eb55aa3f2d66db981201301a160a0761646472657373120472656164120577726974651a130a04696e666f120472656164120577726974651a170a08696e766f69636573120472656164120577726974651a210a086d616361726f6f6e120867656e6572617465120472656164120577726974651a160a076d657373616765120472656164120577726974651a170a086f6666636861696e120472656164120577726974651a160a076f6e636861696e120472656164120577726974651a140a057065657273120472656164120577726974651a180a067369676e6572120867656e6572617465120472656164000006205cbe0f647bc1b4351659dc640984f3f1d61e55e2457984001c6d26767ee3025d"
	serverLndRpcPort     = "10002"
	serverLndRPCHostPort = "localhost:" + serverLndRpcPort
)

func RunBoardingAndSpend() {
	currentBlockHeight := 300
	lockBlockHeight := currentBlockHeight + 4320

	assetId, _ := hex.DecodeString("7d8a7fe5d768f53d286c399350412e857e0014481a8fb8faf10bc62b31e736fc")
	ammt := 10

	userLndClient := InitLndClient(userLndRpcHostPort, userLndRpcPort, userLndTLSCert, userLndMacaroon)
	userTapClient := InitTapClient(userRPCHostPort, userRPCPort, userTapTLSCertFilename, userTapMacaroon, userLndClient)

	serverLndClient := InitLndClient(serverLndRPCHostPort, serverLndRpcPort, serverLndTLSCert, serverLndMacaroon)
	serverTapClient := InitTapClient(serverRPCHostPort, serverRPCPort, serverTapTLSCertFilename, serverTapMacaroon, serverLndClient)

	userScriptKey, userInternalKey := userTapClient.GetNextKeys()
	serverScriptKey, serverInternalKey := serverTapClient.GetNextKeys()

	// 1. Create Both Bording Ark Script and Boarding Ark Asset Script
	arkScript, err := CreateBoardingArkScript(userInternalKey.PubKey, serverInternalKey.PubKey, uint32(lockBlockHeight))
	if err != nil {
		log.Fatal(err)
	}
	arkAssetScript := CreateBoardingArkAssetScript(userScriptKey.RawKey.PubKey, serverScriptKey.RawKey.PubKey, uint32(lockBlockHeight))

	addr, err := serverTapClient.GetBoardingAddress(arkScript.Branch, arkAssetScript.tapScriptKey, assetId, uint64(ammt))

	// 2. Send From User To Boarding Address
	sendResp, err := userTapClient.client.SendAsset(context.TODO(), &taprpc.SendAssetRequest{
		TapAddrs: []string{addr.Encoded},
	})

	// spend from Boarding Address
	btcInternalKey := asset.NUMSPubKey
	btcControlBlock := &txscript.ControlBlock{
		LeafVersion: txscript.BaseLeafVersion,
		InternalKey: btcInternalKey,
	}
	multiSigOutAnchor := sendResp.Transfer.Outputs[1].Anchor
	rightNodeHash := arkScript.Right.TapHash()
	inclusionproof := append(rightNodeHash[:], multiSigOutAnchor.TaprootAssetRoot[:]...)
	btcControlBlock.InclusionProof = inclusionproof
	rootHash := btcControlBlock.RootHash(arkScript.Left.Script)
	tapKey := txscript.ComputeTaprootOutputKey(btcInternalKey, rootHash)
	if tapKey.SerializeCompressed()[0] ==
		secp256k1.PubKeyFormatCompressedOdd {

		btcControlBlock.OutputKeyYIsOdd = true
	}

	if err != nil {
		log.Fatal("error", err)
	}

	log.Println("Asset Transfered Please Mine")

	// wait for transfer to reach
	serverTapClient.IncomingTransferEvent(addr)

	// Spend By MultiSig
	spendAddr, err := userTapClient.client.NewAddr(context.TODO(), &taprpc.NewAddrRequest{
		AssetId: assetId,
		Amt:     uint64(ammt / 2),
	})

	log.Println("created spend multisig address")

	if err != nil {
		log.Fatal(err)
	}

	spendRecipients := map[string]uint64{
		spendAddr.Encoded: spendAddr.Amount,
	}
	spendFundResp, err := serverTapClient.wallet.FundVirtualPsbt(
		context.TODO(), &assetwalletrpc.FundVirtualPsbtRequest{
			Template: &assetwalletrpc.FundVirtualPsbtRequest_Raw{
				Raw: &assetwalletrpc.TxTemplate{
					Recipients: spendRecipients,
				},
			},
		},
	)

	log.Println("created spend fund Virtual PSBT")
	fundedSpendPkt := deserializeVPacket(spendFundResp.FundedPsbt)
	_, userSessionId := userTapClient.partialSignAssetTransfer(fundedSpendPkt,
		&arkAssetScript.leaves[0], userScriptKey.RawKey, arkAssetScript.userNonce, serverScriptKey.RawKey.PubKey, arkAssetScript.serverNonce.PubNonce)

	log.Println("created asset partial sig for user")

	serverPartialSig, _ := serverTapClient.partialSignAssetTransfer(fundedSpendPkt,
		&arkAssetScript.leaves[0], serverScriptKey.RawKey, arkAssetScript.serverNonce, userScriptKey.RawKey.PubKey, arkAssetScript.userNonce.PubNonce)

	log.Println("created asset partial for server")

	transferAssetWitness := userTapClient.combineSigs(userSessionId, serverPartialSig, arkAssetScript.leaves[0], arkAssetScript.tree, arkAssetScript.controlBlock)

	// update transferAsset Witnesss
	for idx := range fundedSpendPkt.Outputs {
		asset := fundedSpendPkt.Outputs[idx].Asset
		firstPrevWitness := &asset.PrevWitnesses[0]
		if asset.HasSplitCommitmentWitness() {
			rootAsset := firstPrevWitness.SplitCommitment.RootAsset
			firstPrevWitness = &rootAsset.PrevWitnesses[0]
		}
		firstPrevWitness.TxWitness = transferAssetWitness
	}

	vPackets := []*tappsbt.VPacket{fundedSpendPkt}
	transferBtcPkt, err := tapsend.PrepareAnchoringTemplate(vPackets)
	if err != nil {
		log.Fatal(err)
	}

	btcTransferPkt, finalizedTransferPackets, _, commitResp := serverTapClient.CommitVirtualPsbts(
		transferBtcPkt, vPackets, nil, -1,
	)

	// sign Btc Transaction
	btcControlBlockBytes, err := btcControlBlock.ToBytes()
	if err != nil {
		log.Fatal(err)
	}
	assetInputIdx := uint32(0)
	serverBtcPartialSig := serverTapClient.partialSignBtcTransfer(
		btcTransferPkt, assetInputIdx,
		serverInternalKey, btcControlBlockBytes, arkScript.Left,
	)
	userBtcPartialSig := userTapClient.partialSignBtcTransfer(
		btcTransferPkt, assetInputIdx,
		userInternalKey, btcControlBlockBytes, arkScript.Left,
	)

	txWitness := wire.TxWitness{
		serverBtcPartialSig,
		userBtcPartialSig,
		arkScript.Left.Script,
		btcControlBlockBytes,
	}
	var buf bytes.Buffer
	err = psbt.WriteTxWitness(&buf, txWitness)
	if err != nil {
		log.Fatal(err)
	}

	btcTransferPkt.Inputs[assetInputIdx].FinalScriptWitness = buf.Bytes()
	signedPkt := serverTapClient.FinalizePacket(btcTransferPkt)

	_ = serverTapClient.LogAndPublish(signedPkt, finalizedTransferPackets, nil,
		commitResp,
	)

	log.Println("Boarding Transaction Complete")

}
