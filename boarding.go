package taponark

import (
	"bytes"
	"context"
	"encoding/hex"
	"log"

	"github.com/btcsuite/btcd/btcutil/psbt"
	"github.com/btcsuite/btcd/txscript"
	"github.com/btcsuite/btcd/wire"
	"github.com/decred/dcrd/dcrec/secp256k1/v4"
	"github.com/lightninglabs/taproot-assets/asset"
	"github.com/lightninglabs/taproot-assets/tappsbt"
	"github.com/lightninglabs/taproot-assets/taprpc"
	"github.com/lightninglabs/taproot-assets/taprpc/assetwalletrpc"
	"github.com/lightninglabs/taproot-assets/tapsend"
)

// user tap client

const (
	userDataDir            = "data"
	userTapTLSCertFilename = "2d2d2d2d2d424547494e2043455254494649434154452d2d2d2d2d0a4d4949434e544343416471674177494241674952414c63694458752b58413257774861775665354e454d6377436759494b6f5a497a6a3045417749774e4445670a4d4234474131554543684d58644746775a434268645852765a3256755a584a686447566b49474e6c636e51784544414f42674e5642414d5442324a76596931300a595841774868634e4d6a55774d6a41334d5459784e6a49355768634e4d6a59774e4441304d5459784e6a4935576a41304d534177486759445651514b457864300a5958426b494746316447396e5a57356c636d46305a57516759325679644445514d4134474131554541784d48596d39694c5852686344425a4d424d47427971470a534d34394167454743437147534d34394177454841304941424d4e6e577854306a576239567569592f47745951744c3170702b79327434734f563470547374410a6a53316c44394f515a454c565664482b675a42564d4f2b706154577149587a7a56304374693464334c454f77586a2b6a6763777767636b7744675944565230500a4151482f4241514441674b6b4d424d47413155644a51514d4d416f47434373474151554642774d424d41384741315564457745422f7751464d414d42416638770a485159445652304f424259454650707765574875666e304636742f762f4e576639693277677a4a4e4d48494741315564455152724d476d4342324a76596931300a5958434343577876593246736147397a64494948596d39694c585268634949526347397359584974626a45774c574a76596931305958434342485675615869430a436e56756158687759574e725a58534342324a315a6d4e76626d36484248384141414748454141414141414141414141414141414141414141414748424b77530a41414977436759494b6f5a497a6a3045417749445351417752674968414e5055314e47747858564f784e4c696358333542532f3344356559577a754d2b2f43760a32506a6d336f476d41694541346c6b5339306743576a3444553876414e687652635642555163437971677567584e354e73582b695361673d0a2d2d2d2d2d454e442043455254494649434154452d2d2d2d2d0a"
	userTapMacaroon        = "0201047461706402d001030a10cc26f487cc59326f82a7d7b42c991c661201301a180a09616464726573736573120472656164120577726974651a150a06617373657473120472656164120577726974651a170a086368616e6e656c73120472656164120577726974651a150a066461656d6f6e120472656164120577726974651a130a046d696e74120472656164120577726974651a150a0670726f6f6673120472656164120577726974651a120a03726671120472656164120577726974651a170a08756e69766572736512047265616412057772697465000006201b74fecdad1d43dbab27a1dbc46b2e21b535d03ecef5fdf9131729f867f9b72f"
	userRPCPort            = "12030"
	userRPCHostPort        = "localhost:" + userRPCPort

	serverDataDir            = "data"
	serverTapTLSCertFilename = "2d2d2d2d2d424547494e2043455254494649434154452d2d2d2d2d0a4d4949434e544343416471674177494241674952414c63694458752b58413257774861775665354e454d6377436759494b6f5a497a6a3045417749774e4445670a4d4234474131554543684d58644746775a434268645852765a3256755a584a686447566b49474e6c636e51784544414f42674e5642414d5442324a76596931300a595841774868634e4d6a55774d6a41334d5459784e6a49355768634e4d6a59774e4441304d5459784e6a4935576a41304d534177486759445651514b457864300a5958426b494746316447396e5a57356c636d46305a57516759325679644445514d4134474131554541784d48596d39694c5852686344425a4d424d47427971470a534d34394167454743437147534d34394177454841304941424d4e6e577854306a576239567569592f47745951744c3170702b79327434734f563470547374410a6a53316c44394f515a454c565664482b675a42564d4f2b706154577149587a7a56304374693464334c454f77586a2b6a6763777767636b7744675944565230500a4151482f4241514441674b6b4d424d47413155644a51514d4d416f47434373474151554642774d424d41384741315564457745422f7751464d414d42416638770a485159445652304f424259454650707765574875666e304636742f762f4e576639693277677a4a4e4d48494741315564455152724d476d4342324a76596931300a5958434343577876593246736147397a64494948596d39694c585268634949526347397359584974626a45774c574a76596931305958434342485675615869430a436e56756158687759574e725a58534342324a315a6d4e76626d36484248384141414748454141414141414141414141414141414141414141414748424b77530a41414977436759494b6f5a497a6a3045417749445351417752674968414e5055314e47747858564f784e4c696358333542532f3344356559577a754d2b2f43760a32506a6d336f476d41694541346c6b5339306743576a3444553876414e687652635642555163437971677567584e354e73582b695361673d0a2d2d2d2d2d454e442043455254494649434154452d2d2d2d2d0a"
	serverTapMacaroon        = "0201047461706402d001030a10cc26f487cc59326f82a7d7b42c991c661201301a180a09616464726573736573120472656164120577726974651a150a06617373657473120472656164120577726974651a170a086368616e6e656c73120472656164120577726974651a150a066461656d6f6e120472656164120577726974651a130a046d696e74120472656164120577726974651a150a0670726f6f6673120472656164120577726974651a120a03726671120472656164120577726974651a170a08756e69766572736512047265616412057772697465000006201b74fecdad1d43dbab27a1dbc46b2e21b535d03ecef5fdf9131729f867f9b72f"
	serverRPCPort            = "12030"
	serverRPCHostPort        = "localhost:" + serverRPCPort

	groupKeyName         = "group_key"
	amtName              = "amt"
	assetVersionName     = "asset_version"
	addressVersionName   = "address_version"
	proofCourierAddrName = "proof_courier_addr"
)

const (
	userLndTLSCert     = "2d2d2d2d2d424547494e2043455254494649434154452d2d2d2d2d0a4d4949434e544343416471674177494241674952414c63694458752b58413257774861775665354e454d6377436759494b6f5a497a6a3045417749774e4445670a4d4234474131554543684d58644746775a434268645852765a3256755a584a686447566b49474e6c636e51784544414f42674e5642414d5442324a76596931300a595841774868634e4d6a55774d6a41334d5459784e6a49355768634e4d6a59774e4441304d5459784e6a4935576a41304d534177486759445651514b457864300a5958426b494746316447396e5a57356c636d46305a57516759325679644445514d4134474131554541784d48596d39694c5852686344425a4d424d47427971470a534d34394167454743437147534d34394177454841304941424d4e6e577854306a576239567569592f47745951744c3170702b79327434734f563470547374410a6a53316c44394f515a454c565664482b675a42564d4f2b706154577149587a7a56304374693464334c454f77586a2b6a6763777767636b7744675944565230500a4151482f4241514441674b6b4d424d47413155644a51514d4d416f47434373474151554642774d424d41384741315564457745422f7751464d414d42416638770a485159445652304f424259454650707765574875666e304636742f762f4e576639693277677a4a4e4d48494741315564455152724d476d4342324a76596931300a5958434343577876593246736147397a64494948596d39694c585268634949526347397359584974626a45774c574a76596931305958434342485675615869430a436e56756158687759574e725a58534342324a315a6d4e76626d36484248384141414748454141414141414141414141414141414141414141414748424b77530a41414977436759494b6f5a497a6a3045417749445351417752674968414e5055314e47747858564f784e4c696358333542532f3344356559577a754d2b2f43760a32506a6d336f476d41694541346c6b5339306743576a3444553876414e687652635642555163437971677567584e354e73582b695361673d0a2d2d2d2d2d454e442043455254494649434154452d2d2d2d2d0a"
	userLndMacaroon    = "0201047461706402d001030a10cc26f487cc59326f82a7d7b42c991c661201301a180a09616464726573736573120472656164120577726974651a150a06617373657473120472656164120577726974651a170a086368616e6e656c73120472656164120577726974651a150a066461656d6f6e120472656164120577726974651a130a046d696e74120472656164120577726974651a150a0670726f6f6673120472656164120577726974651a120a03726671120472656164120577726974651a170a08756e69766572736512047265616412057772697465000006201b74fecdad1d43dbab27a1dbc46b2e21b535d03ecef5fdf9131729f867f9b72f"
	userLndRpcPort     = "12030"
	userLndRpcHostPort = "localhost:" + userLndRpcPort

	serverLndTLSCert     = "2d2d2d2d2d424547494e2043455254494649434154452d2d2d2d2d0a4d4949434e544343416471674177494241674952414c63694458752b58413257774861775665354e454d6377436759494b6f5a497a6a3045417749774e4445670a4d4234474131554543684d58644746775a434268645852765a3256755a584a686447566b49474e6c636e51784544414f42674e5642414d5442324a76596931300a595841774868634e4d6a55774d6a41334d5459784e6a49355768634e4d6a59774e4441304d5459784e6a4935576a41304d534177486759445651514b457864300a5958426b494746316447396e5a57356c636d46305a57516759325679644445514d4134474131554541784d48596d39694c5852686344425a4d424d47427971470a534d34394167454743437147534d34394177454841304941424d4e6e577854306a576239567569592f47745951744c3170702b79327434734f563470547374410a6a53316c44394f515a454c565664482b675a42564d4f2b706154577149587a7a56304374693464334c454f77586a2b6a6763777767636b7744675944565230500a4151482f4241514441674b6b4d424d47413155644a51514d4d416f47434373474151554642774d424d41384741315564457745422f7751464d414d42416638770a485159445652304f424259454650707765574875666e304636742f762f4e576639693277677a4a4e4d48494741315564455152724d476d4342324a76596931300a5958434343577876593246736147397a64494948596d39694c585268634949526347397359584974626a45774c574a76596931305958434342485675615869430a436e56756158687759574e725a58534342324a315a6d4e76626d36484248384141414748454141414141414141414141414141414141414141414748424b77530a41414977436759494b6f5a497a6a3045417749445351417752674968414e5055314e47747858564f784e4c696358333542532f3344356559577a754d2b2f43760a32506a6d336f476d41694541346c6b5339306743576a3444553876414e687652635642555163437971677567584e354e73582b695361673d0a2d2d2d2d2d454e442043455254494649434154452d2d2d2d2d0a"
	serverLndMacaroon    = "0201047461706402d001030a10cc26f487cc59326f82a7d7b42c991c661201301a180a09616464726573736573120472656164120577726974651a150a06617373657473120472656164120577726974651a170a086368616e6e656c73120472656164120577726974651a150a066461656d6f6e120472656164120577726974651a130a046d696e74120472656164120577726974651a150a0670726f6f6673120472656164120577726974651a120a03726671120472656164120577726974651a170a08756e69766572736512047265616412057772697465000006201b74fecdad1d43dbab27a1dbc46b2e21b535d03ecef5fdf9131729f867f9b72f"
	serverLndRpcPort     = "12030"
	serverLndRPCHostPort = "localhost:" + serverLndRpcPort
)

func RunBoardingAndSpend() {
	currentBlockHeight := 300
	lockBlockHeight := currentBlockHeight + 4320

	assetId, _ := hex.DecodeString("8e781dedad7dfdccc0e5f05dea48c0245766952c44246a752e13d19df7affa34")
	ammt := 10

	userLndClient := InitLndClient(userLndRpcHostPort, userLndRpcPort, userLndTLSCert, userLndMacaroon)
	userTapClient := InitTapClient(userRPCHostPort, userRPCPort, userTapTLSCertFilename, userTapMacaroon, userLndClient)

	serverLndClient := InitLndClient(serverLndRPCHostPort, serverLndRpcPort, serverLndTLSCert, serverLndMacaroon)
	serverTapClient := InitTapClient(serverRPCHostPort, serverRPCPort, serverTapTLSCertFilename, serverTapMacaroon, serverLndClient)

	userScriptKey, userInternalKey := userTapClient.GetNextKeys()
	serverScriptKey, serverInternalKey := serverTapClient.GetNextKeys()

	// 1. Create Both Bording Ark Script and Boarding Ark Asset Script
	arkScript, err := CreateBoardingArkScript(userInternalKey.PubKey, serverInternalKey.PubKey, uint32(lockBlockHeight))
	if err != nil {
		log.Fatal(err)
	}
	arkAssetScript := createBoardingArkScript(userScriptKey.PubKey, serverScriptKey.PubKey, uint32(lockBlockHeight))

	addr, err := serverTapClient.GetBoardingAddress(arkScript.Branch, arkAssetScript.tapScriptKey, assetId, uint64(ammt))

	// 2. Send From User To Boarding Address
	sendResp, err := userTapClient.client.SendAsset(context.TODO(), &taprpc.SendAssetRequest{
		TapAddrs: []string{addr.Encoded},
	})

	// spend from Boarding Address
	btcInternalKey := asset.NUMSPubKey
	btcControlBlock := &txscript.ControlBlock{
		LeafVersion: txscript.BaseLeafVersion,
		InternalKey: btcInternalKey,
	}
	multiSigOutAnchor := sendResp.Transfer.Outputs[1].Anchor
	rightNodeHash := arkScript.Right.TapHash()
	inclusionproof := append(rightNodeHash[:], multiSigOutAnchor.TaprootAssetRoot[:]...)
	btcControlBlock.InclusionProof = inclusionproof
	rootHash := btcControlBlock.RootHash(arkScript.Left.Script)
	tapKey := txscript.ComputeTaprootOutputKey(btcInternalKey, rootHash)
	if tapKey.SerializeCompressed()[0] ==
		secp256k1.PubKeyFormatCompressedOdd {

		btcControlBlock.OutputKeyYIsOdd = true
	}

	if err != nil {
		log.Fatal("error", err)
	}
	// TODO (Wait For TXN To Be Broadcasted)

	// Spend By MultiSig
	spendAddr, err := userTapClient.client.NewAddr(context.TODO(), &taprpc.NewAddrRequest{
		AssetId: assetId,
		Amt:     uint64(ammt / 2),
	})

	if err != nil {
		log.Fatal(err)
	}

	spendRecipients := map[string]uint64{
		spendAddr.Encoded: spendAddr.Amount,
	}
	spendFundResp, err := serverTapClient.wallet.FundVirtualPsbt(
		context.TODO(), &assetwalletrpc.FundVirtualPsbtRequest{
			Template: &assetwalletrpc.FundVirtualPsbtRequest_Raw{
				Raw: &assetwalletrpc.TxTemplate{
					Recipients: spendRecipients,
				},
			},
		},
	)

	fundedSpendPkt := deserializeVPacket(spendFundResp.FundedPsbt)
	_, userSessionId := userTapClient.createAssetPartialSig(fundedSpendPkt,
		&arkAssetScript.leaves[0], userScriptKey.RawKey, arkAssetScript.userNonce, serverScriptKey.PubKey, arkAssetScript.serverNonce.PubNonce)

	serverPartialSig, _ := serverTapClient.createAssetPartialSig(fundedSpendPkt,
		&arkAssetScript.leaves[0], serverScriptKey.RawKey, arkAssetScript.serverNonce, userScriptKey.PubKey, arkAssetScript.userNonce.PubNonce)

	transferAssetWitness := userTapClient.combineSigs(userSessionId, serverPartialSig, arkAssetScript.leaves[0], arkAssetScript.tree, arkAssetScript.controlBlock)

	// update transferAsset Witnesss
	for idx := range fundedSpendPkt.Outputs {
		asset := fundedSpendPkt.Outputs[idx].Asset
		firstPrevWitness := &asset.PrevWitnesses[0]
		if asset.HasSplitCommitmentWitness() {
			rootAsset := firstPrevWitness.SplitCommitment.RootAsset
			firstPrevWitness = &rootAsset.PrevWitnesses[0]
		}
		firstPrevWitness.TxWitness = transferAssetWitness
	}

	vPackets := []*tappsbt.VPacket{fundedSpendPkt}
	transferBtcPkt, err := tapsend.PrepareAnchoringTemplate(vPackets)
	if err != nil {
		log.Fatal(err)
	}

	btcTransferPkt, finalizedTransferPackets, _, commitResp := serverTapClient.CommitVirtualPsbts(
		transferBtcPkt, vPackets, nil, -1,
	)

	// sign Btc Transaction
	btcControlBlockBytes, err := btcControlBlock.ToBytes()
	if err != nil {
		log.Fatal(err)
	}
	assetInputIdx := uint32(0)
	serverBtcPartialSig := serverTapClient.partialSignBtcTransfer(
		btcTransferPkt, assetInputIdx,
		serverInternalKey, btcControlBlockBytes, arkScript.Left,
	)
	userBtcPartialSig := userTapClient.partialSignBtcTransfer(
		btcTransferPkt, assetInputIdx,
		userInternalKey, btcControlBlockBytes, arkScript.Left,
	)

	txWitness := wire.TxWitness{
		serverBtcPartialSig,
		userBtcPartialSig,
		arkScript.Left.Script,
		btcControlBlockBytes,
	}
	var buf bytes.Buffer
	err = psbt.WriteTxWitness(&buf, txWitness)
	if err != nil {
		log.Fatal(err)
	}

	btcTransferPkt.Inputs[assetInputIdx].FinalScriptWitness = buf.Bytes()
	signedPkt := serverTapClient.FinalizePacket(btcTransferPkt)

	_ = serverTapClient.LogAndPublish(signedPkt, finalizedTransferPackets, nil,
		commitResp,
	)

	log.Println("Boarding Transaction Complete")

}
